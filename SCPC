/*
Task 1 : Create a function that takes a string as input and returns the reversed version of the string without using the built-in reverse() method. 
*/
const reverseString = (str) => {
    let reversedString = '';
    for (let i = str.length - 1; i >= 0; i--) {
        reversedString += str[i];
    }
    return reversedString;
}
console.log(reverseString('Hello World'))


/*
Task 2 : Create a function that takes an array of numbers as input and returns the sum of all positive numbers in the array.
*/
const sumPositiveNumbers = (arr) => {
    let sum = 0;
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] > 0) {
            sum += arr[i]
        }
    }
    return sum
}
const sumPositiveNumbersReduce = (arr) => arr.reduce((total, num) => total + (!(num < 0) ? num : 0), 0);

console.log(sumPositiveNumbers([2, -5, 10, -3, 7]))
console.log(sumPositiveNumbersReduce([2, -5, 10, -3, 7]))


/*
Task 3: Write a JavaScript program to find the most frequent element in an array and return it. 
*/
const mostFrequentElement = (arr) => {
    const frequents = {};
    let maxFrequents = 0;
    let mostFrequentElement;
    for (const num of arr) {
        frequents[num] = (frequents[num] || 0) + 1;
        if (frequents[num] > maxFrequents) {
            maxFrequents = frequents[num];
            mostFrequentElement = num
        }
    }
    return mostFrequentElement;
}
console.log(mostFrequentElement([3, 5, 2, 5, 3, 3, 1, 4, 5]))


/*
Task 4: Create a function that takes a sorted array of numbers and a target value as input. The function should find two numbers in the array that add up to the target value. Return an array containing the indices of the two numbers. 
*/
const findTowTargetedNum = (arr, target) => {
    for (let i = 0; i < arr.length; i++) {
        for (let j = i + 1; j < arr.length; j++) {
            if (arr[i] + arr[j] === target) {
                return [i, j]
            }
        }
    }
}
console.log(findTowTargetedNum([1, 3, 6, 8, 11, 15], 9))


/*
Task 5: Implement a simple JavaScript calculator. The calculator should take two numbers and an operator (+, -, *, /) as input and return the result of the operation. 
*/
const operatorCalculator = (num1, operator, num2) => {
    switch (operator) {
        case "+":
            return num1 + num2;
        case "-":
            return num1 - num2;
        case "*":
            return num1 * num2;
        case "/":
            return num1 / num2;
        default:
            return "Invalid Operator"
    }
}
console.log(operatorCalculator(9, "/", 3))


/*
Task 6: Create a program that generates a random password of a specified length. The password should include a mix of uppercase letters, lowercase letters, numbers, and special characters.
*/
const randomPass = (length) => {
    const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()";
    let password = "";
    for (let i = 0; i <= length; i++) {
        const randomIndex = Math.floor(Math.random() * characters.length);
        password += characters[randomIndex];
    }
    return password;
}
console.log(randomPass(9))


/*
Task 7: Implement a function that converts a Roman numeral to an integer. The function should take a Roman numeral string (e.g., "IX" or "XXI") as input and return the corresponding integer value.
*/
const romanNumToIntegerNum = (romanNum) => {
    const romanNumUppercase = romanNum.toUpperCase()
    const romanValues = {
        "I": 1,
        "V": 5,
        "X": 10,
        "L": 50,
        "C": 100,
        "D": 500,
        "M": 1000
    }
    let resultValue = 0;
    let prevValue = 0;
    for (let i = romanNum.length - 1; i >= 0; i--) {
        const currentValue = romanValues[romanNumUppercase[i]];
        if (currentValue < prevValue) {
            resultValue -= currentValue;
        } else {
            resultValue += currentValue;
            prevValue = currentValue;
        }
    }
    return resultValue;
}
console.log(romanNumToIntegerNum("XXI"))


/*
Task 8: Implement a JavaScript function to find the second smallest element in an array of numbers. The function should return the second smallest number.
*/
const secondSmallest = (arr) => {
    if (arr.length < 2) {
        return "Array Should Have At Least Tow Element"
    }
    const newArray = arr.filter(element => element != Math.min(...arr));
    const result = Math.min(...newArray);
    return result;
}
console.log(secondSmallest([1, 3, 6, 2, 8, 9]))
